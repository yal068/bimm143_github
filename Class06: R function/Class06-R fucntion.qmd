---
title: "Class 6: R functions"
author: "Yang Liu (A16629623)"
format: pdf
editor: visual
---

All functions in R have at least 3 things:

-A **name** (youget to pick this) -input **arguments** (there can be only one or loads -again your calls) -the **body** (where the works gets done, this code between the curly brackets{})

Lest's write a function to add some numbers, we can call it 'add'

```{r}
x <- 10
y <- 10
x + y
```

```{r}
add <- function(x, y) {
  y <- 10
  x + y
}
```

can I just use my function?

```{r}
add(1)
```

Let's make it a bit more flexible.

```{r}
add <- function(x, y) {
  x + y
}


add (10, 10)
```

```{r}
add <- function(x, y=1) {
  x + y
}

add(x=10, y=10)
```

```{r}
add(10)
```

Q1. Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: "https://tinyurl.com/gradeinput" \[3pts\]

```{r}
# Example input vectors to start with
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```

Start with student 1

```{r}
mean (student1)
```

#rm means remove, na.rm will be remove the NA

```{r}
mean (student2, na.rm = TRUE)
```

```{r}
mean (student3, na.rm=TRUE)
```

Let's try to work with student1 and find (and drop) the lowest score

```{r}
student1
```

Google told me about min() and max()

```{r}
min(student1)
```

```{r}
which.min(student1)
```

```{r}
student1[8]
```

```{r}
student1[which.min(student1)]
```

```{r}
student1 <- student1[-which.min(student1)]
student1
mean(student1)
```

```{r}
mean(student1[which.min(student1)])
```

```{r}
x <- student2
mean(x[-which.min(x)], na.rm=TRUE)
```

Our approach to the NA problem (missing problems): we can replace all NA vlaues with zero.

1st task is find the NA values

```{r}
x <- student2
is.na(x)
```

I have find the NA (TRUE) values from 'is.na()' now I want to make them equal to zero(overwrite them/mast them etc.)

```{r}
x[is.na(x)] <- 0
x
```

```{r}
y <- 1:5
y
y[y>3] <- 0
y
```

I want to combine the "is.na(x)" with making these elements equal to zero. And then take this "masked" (vector of student scores with NA values as zero) and drop the lowest and get the mean.

```{r}
x <- student3
x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

```{r}
grade <- function (scores) {
  # Remove one lowest score or NA
  scores[is.na(scores)] <- 0
  if (length(scores) > 1) {
    scores <- scores[-which.min(scores)]
  }
  # Return the average of the remaining scores
  mean(scores)
}

grade(student2)
```

Q2. Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? \[3pts\]

The **apply()** function in R is super useful but can be a little confusing to begin with.

```{r}
gradebook <- read.csv(url("https://tinyurl.com/gradeinput") )
apply(gradebook[,-1], 1, grade)
```

```{r}
gradebook <- read.csv(url("https://tinyurl.com/gradeinput") )
average_scores <- apply(gradebook[, -1], 1, grade)  

# Now find the top scoring student's name
top_student_name <- gradebook$X[which.max(average_scores)]

top_student_name
max(average_scores)
```

Q3. From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall? \[2pts\]

```{r}
apply(gradebook[,-1], 2, mean, na.rm=TRUE)
```

```{r}
which.min(apply(gradebook[,-1], 2, mean, na.rm=TRUE))
```

Q4. Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)? \[1pt\] 

```{r}
average_scores
gradebook$hw5
cor(gradebook$hw1, average_scores)
cor(gradebook$hw2, average_scores)
cor(gradebook$hw3, average_scores)
cor(gradebook$hw4, average_scores)
cor(gradebook$hw5, average_scores)
```
```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
```


```{r}
cor(mask$hw1, average_scores)
cor(mask$hw2, average_scores)
cor(mask$hw3, average_scores)
cor(mask$hw4, average_scores)
cor(mask$hw5, average_scores)
```
```{r}
apply(mask[,-1], 2, cor, y=average_scores)
```



Q5. Make sure you save your Quarto document and can click the "Render" (or Rmarkdown"Knit") button to generate a PDF foramt report without errors. Finally, submit your PDF to gradescope. \[1pt\]
